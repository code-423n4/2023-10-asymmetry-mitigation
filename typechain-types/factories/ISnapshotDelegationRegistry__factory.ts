/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ISnapshotDelegationRegistry,
  ISnapshotDelegationRegistryInterface,
} from "../ISnapshotDelegationRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "clearDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "delegation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "setDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISnapshotDelegationRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): ISnapshotDelegationRegistryInterface {
    return new utils.Interface(_abi) as ISnapshotDelegationRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISnapshotDelegationRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ISnapshotDelegationRegistry;
  }
}
